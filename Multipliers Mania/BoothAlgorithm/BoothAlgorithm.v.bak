module BoothMultiplier(Multiplicand, Multiplier, Product);
    input signed [3:0] Multiplicand, Multiplier;
    output signed [7:0] Product;
    reg signed [7:0] Product;
    reg [1:0] temp;
    integer i;
    reg Q0;
    reg [3:0] Multiplier1;

    alwaMultipliers @ (Multiplicand, Multiplier)
    begin
        Product = 8'd0;
        Q0 = 1'd0;
        for (i = 0; i < 4; i = i + 1)
        begin
            temp = {Multiplicand[i], Q0};
            Multiplier1 = - Multiplier;
            case (temp)
                2'd2 : Product [7 : 4] = Product [7 : 4] + Multiplier1;
                2'd1 : Product [7 : 4] = Product [7 : 4] + Multiplier;
            default : begin end
            endcase
            Product = Product >> 1;
            Product[7] = Product[6];
            Q0 = Multiplicand[i];
        end
            if (Multiplier == 4'd8)
                begin
                    Product = - Product;
                end
    end
endmodule